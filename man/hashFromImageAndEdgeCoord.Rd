% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ocpuApi.R
\name{hashFromImageAndEdgeCoord}
\alias{hashFromImageAndEdgeCoord}
\title{hashFromImageAndEdgeCoord}
\usage{
curl -v http://localhost:8004/ocpu/library/whaleRidgeFindR/R/hashFromImageAndEdgeCoord/json \
-F "imageobj=@C:/Users/jathompson/Documents/Testingdb/jensImgs/test2.jpg"\
-F "xvec=[6,7,8,7,6,5,5,6,7,8,9]"\
-F "yvec=[3,4,5,6,6,5,6,6,7,8,9]"

hashFromImageAndEdgeCoord(
  imageobj = "yourfile1.jpg",
  xvec=c(3,4,5,6,6,5,6,7,8),
  yvec=c(6,7,8,7,6,5,5,6,7)
)
}
\arguments{
\item{imageobj}{character vector which denots image file "directory/whaleRidgeImage.JPG"}

\item{xCoordinates}{x pixel coordinates for data extraction}

\item{yCoordinates}{y pixel coordinates for data extraction}
}
\value{
hash assiciated with the provided image and trailing edge
}
\description{
hashFromImageAndEdgeCoord
}
\details{
\code{extractAnnulus} wrapper for use through opencpu.
if coordinates are generated from whaleRidgeFindR, \code{constrainSizeFinImage} 
should be called by setting boundResize = 1
opencpu passes temp object name to function followed by \code{traceToHash}
Coordinates should denote the pixels along the trailing edge of the whaleRidge
\code{extractAnnulus}
which collects image data used for identification.
Coordinates assume the upper left corner is denoted as 1,1 (recall, R is 1 indexed)
}
