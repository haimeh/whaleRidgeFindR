// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <imager.h>
#include <Rcpp.h>
using namespace cimg_library;

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// findPath
std::vector<int> findPath(const Rcpp::NumericMatrix edge, const int startx, const int starty, const int endx, const int endy, const int minX, const int maxX, const int minY, const int maxY, const int proximity);
RcppExport SEXP _whaleRidgeFindR_findPath(SEXP edgeSEXP, SEXP startxSEXP, SEXP startySEXP, SEXP endxSEXP, SEXP endySEXP, SEXP minXSEXP, SEXP maxXSEXP, SEXP minYSEXP, SEXP maxYSEXP, SEXP proximitySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix >::type edge(edgeSEXP);
    Rcpp::traits::input_parameter< const int >::type startx(startxSEXP);
    Rcpp::traits::input_parameter< const int >::type starty(startySEXP);
    Rcpp::traits::input_parameter< const int >::type endx(endxSEXP);
    Rcpp::traits::input_parameter< const int >::type endy(endySEXP);
    Rcpp::traits::input_parameter< const int >::type minX(minXSEXP);
    Rcpp::traits::input_parameter< const int >::type maxX(maxXSEXP);
    Rcpp::traits::input_parameter< const int >::type minY(minYSEXP);
    Rcpp::traits::input_parameter< const int >::type maxY(maxYSEXP);
    Rcpp::traits::input_parameter< const int >::type proximity(proximitySEXP);
    rcpp_result_gen = Rcpp::wrap(findPath(edge, startx, starty, endx, endy, minX, maxX, minY, maxY, proximity));
    return rcpp_result_gen;
END_RCPP
}
// extractAnnulus
Rcpp::NumericVector extractAnnulus(const Rcpp::NumericVector imageFromR, const Rcpp::IntegerVector xCoordinates, const Rcpp::IntegerVector yCoordinates);
RcppExport SEXP _whaleRidgeFindR_extractAnnulus(SEXP imageFromRSEXP, SEXP xCoordinatesSEXP, SEXP yCoordinatesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector >::type imageFromR(imageFromRSEXP);
    Rcpp::traits::input_parameter< const Rcpp::IntegerVector >::type xCoordinates(xCoordinatesSEXP);
    Rcpp::traits::input_parameter< const Rcpp::IntegerVector >::type yCoordinates(yCoordinatesSEXP);
    rcpp_result_gen = Rcpp::wrap(extractAnnulus(imageFromR, xCoordinates, yCoordinates));
    return rcpp_result_gen;
END_RCPP
}
// extractEdgeMap
Rcpp::NumericVector extractEdgeMap(const Rcpp::NumericVector gradientFromR, const Rcpp::NumericVector anglesFromR);
RcppExport SEXP _whaleRidgeFindR_extractEdgeMap(SEXP gradientFromRSEXP, SEXP anglesFromRSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector >::type gradientFromR(gradientFromRSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericVector >::type anglesFromR(anglesFromRSEXP);
    rcpp_result_gen = Rcpp::wrap(extractEdgeMap(gradientFromR, anglesFromR));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_whaleRidgeFindR_findPath", (DL_FUNC) &_whaleRidgeFindR_findPath, 10},
    {"_whaleRidgeFindR_extractAnnulus", (DL_FUNC) &_whaleRidgeFindR_extractAnnulus, 3},
    {"_whaleRidgeFindR_extractEdgeMap", (DL_FUNC) &_whaleRidgeFindR_extractEdgeMap, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_whaleRidgeFindR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
